name: Java CI with Maven
env:
  JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64
  JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          echo '<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ secrets.USERNAME_GITHUB }}</username>
                      <password>${{ secrets.TOKEN_GITHUB }}</password>
                    </server>
                  </servers>
                </settings>' > ~/.m2/settings.xml
      - name: Save Maven settings
        id: maven-settings
        run: echo "MAVEN_SETTINGS_PATH=~/.m2/settings.xml" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: setup
    services:
      postgres:
        image: postgres:12-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: coreapi_auth
          POSTGRES_PASSWORD: coreapi_auth
          POSTGRES_DB: coreapi_auth
        options: >-
          --health-cmd "pg_isready -U $POSTGRES_USER"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build with Maven
        env:
          MAVEN_SETTINGS: ${{ env.MAVEN_SETTINGS_PATH }}
        run: mvn -B package -DskipTests --file pom.xml --settings $MAVEN_SETTINGS

  spotless_check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run spotless check
        env:
          MAVEN_SETTINGS: ${{ env.MAVEN_SETTINGS_PATH }}
        run: mvn spotless:check --settings $MAVEN_SETTINGS

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests with Maven and generate JaCoCo report
        env:
          MAVEN_SETTINGS: ${{ env.MAVEN_SETTINGS_PATH }}
        run: mvn test jacoco:report --settings $MAVEN_SETTINGS

  upload_report:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco
