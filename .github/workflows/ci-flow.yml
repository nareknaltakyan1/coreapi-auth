name: Java CI with Maven

env:
  JAVA_HOME: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64
  JAVA_HOME_17_X64: /opt/hostedtoolcache/Java_Temurin-Hotspot_jdk/17.0.11-9/x64

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

  setup-java:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

  configure-maven:
    runs-on: ubuntu-latest
    needs: setup-java
    steps:
      - name: Configure Maven settings
        run: |
          mkdir -p ~/.m2
          echo '<settings>
                  <servers>
                    <server>
                      <id>github</id>
                      <username>${{ secrets.USERNAME_GITHUB }}</username>
                      <password>${{ secrets.TOKEN_GITHUB }}</password>
                    </server>
                  </servers>
                </settings>' > ~/.m2/settings.xml

  build:
    runs-on: ubuntu-latest
    needs: configure-maven
    steps:
      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

  spotless-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run spotless check
        run: mvn spotless:check

  run-tests:
    runs-on: ubuntu-latest
    needs: spotless-check
    steps:
      - name: Run tests with Maven and generate JaCoCo report
        run: mvn test jacoco:report

  upload-report:
    runs-on: ubuntu-latest
    needs: run-tests
    steps:
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco

  check-coverage:
    runs-on: ubuntu-latest
    needs: upload-report
    steps:
      - name: Check coverage
        run: |
          coverage=$(grep '<coverage' target/site/jacoco/jacoco.xml | sed -n 's/.*line="\(.*\)".*/\1/p')
          echo "Coverage is: $coverage"
          coverage_threshold=90.0
          if (( $(echo "$coverage < $coverage_threshold" | bc -l) )); then
            echo "Coverage is below threshold ($coverage_threshold%)."
            exit 1
          else
            echo "Coverage is above threshold ($coverage_threshold%)."
          fi
